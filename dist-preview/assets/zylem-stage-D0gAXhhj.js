import{i as p,c as y,e as w,f as b}from"./zylem-physics-DmoYthWA.js";import{aH as C,C as v,T as S,a4 as _,a0 as M,V as l,aI as E,a as k,at as R,B,a1 as z,al as g}from"./vendor-three-CRJRX-3r.js";import{P as m}from"./vendor-rapier-B1_KYila.js";import{b as h,c,d as u,e as L,f as I,g as W}from"./zylem-state-BudcOCuz.js";import{Z as P,v as D}from"./zylem-entities-C3wAFACT.js";import{Z as T,B as Z}from"./zylem-foundation-DJZmtUpf.js";import{c as A}from"./zylem-behaviors-DdgKh3cb.js";import{Z as x,P as H,C as j}from"./zylem-camera-Br0IT0lq.js";class f{type="World";world;collisionMap=new Map;collisionBehaviorMap=new Map;_removalMap=new Map;static async loadPhysics(e){return await m.init(),new m.World(e)}constructor(e){this.world=e}addEntity(e){const t=this.world.createRigidBody(e.bodyDesc);e.body=t,e.body.userData={uuid:e.uuid,ref:e},this.world.gravity.x===0&&this.world.gravity.y===0&&this.world.gravity.z===0&&(e.body.lockTranslations(!0,!0),e.body.lockRotations(!0,!0));const s=this.world.createCollider(e.colliderDesc,e.body);e.collider=s,(e.controlledRotation||e instanceof P)&&(e.body.lockRotations(!0,!0),e.characterController=this.world.createCharacterController(.01),e.characterController.setMaxSlopeClimbAngle(45*Math.PI/180),e.characterController.setMinSlopeSlideAngle(30*Math.PI/180),e.characterController.enableSnapToGround(.01),e.characterController.setSlideEnabled(!0),e.characterController.setApplyImpulsesToDynamicBodies(!0),e.characterController.setCharacterMass(1)),this.collisionMap.set(e.uuid,e)}setForRemoval(e){e.body&&this._removalMap.set(e.uuid,e)}destroyEntity(e){e.collider&&this.world.removeCollider(e.collider,!0),e.body&&(this.world.removeRigidBody(e.body),this.collisionMap.delete(e.uuid),this._removalMap.delete(e.uuid))}setup(){}update(e){const{delta:t}=e;this.world&&(this.updateColliders(t),this.updatePostCollisionBehaviors(t),this.world.step())}updatePostCollisionBehaviors(e){const t=this.collisionBehaviorMap;for(let[s,o]of t){const i=o;if(!p(i))return;i.handlePostCollision({entity:i,delta:e})||this.collisionBehaviorMap.delete(s)}}updateColliders(e){const t=this.collisionMap;for(let[s,o]of t){const i=o;if(i.body){if(this._removalMap.get(i.uuid)){this.destroyEntity(i);continue}this.world.contactsWith(i.body.collider(0),a=>{debugger;const d=a._parent.userData.uuid,r=t.get(d);r&&i._collision&&i._collision(r,h.globals)}),this.world.intersectionsWith(i.body.collider(0),a=>{debugger;const d=a._parent.userData.uuid,r=t.get(d);r&&(i._collision&&i._collision(r,h.globals),p(r)&&(r.handleIntersectionEvent({entity:r,other:i,delta:e}),this.collisionBehaviorMap.set(d,r)))})}}}destroy(){}}class O{type="Scene";_setup;scene;zylemCamera;containerElement=null;constructor(e,t){const s=new C;if(s.background=new v(c.backgroundColor),c.backgroundImage){const i=new S().load(c.backgroundImage);s.background=i}this.scene=s,this.zylemCamera=t,this.setupContainer(e),this.setupLighting(s),this.setupCamera(s,t),u.on&&this.debugScene()}setupContainer(e){let t=document.getElementById(e);if(!t){console.warn(`Could not find element with id: ${e}`);const s=document.createElement("main");s.setAttribute("id",e),document.body.appendChild(s),t=s}t?.firstChild&&t.removeChild(t.firstChild),this.containerElement=t,t?.appendChild(this.zylemCamera.getDomElement())}setup(){this._setup&&this._setup({scene:this,camera:this.zylemCamera})}destroy(){}update({delta:e}){}setupCamera(e,t){e.add(t.cameraRig),t.setup(e)}setupLighting(e){const t=new _(16777215,2);e.add(t);const s=new M(16777215,2);s.name="Light",s.position.set(0,100,0),s.castShadow=!0,s.shadow.camera.near=.1,s.shadow.camera.far=2e3,s.shadow.camera.left=-100,s.shadow.camera.right=100,s.shadow.camera.top=100,s.shadow.camera.bottom=-100,s.shadow.mapSize.width=2048,s.shadow.mapSize.height=2048,e.add(s)}updateRenderer(e,t){this.zylemCamera.resize(e,t)}add(e,t=new l(0,0,0)){e.position.set(t.x,t.y,t.z),this.scene.add(e)}addEntity(e){e.group&&this.scene.add(e.group)}debugScene(){const s=new E(1e3,100);this.scene.add(s)}}const G="Stage";class N{type=G;state={backgroundColor:T,backgroundImage:null,inputs:{p1:["gamepad-1","keyboard"],p2:["gamepad-2","keyboard"]},gravity:new l(0,0,0),variables:{},entities:[]};gravity;world;scene;conditions=[];children=[];_childrenMap=new Map;_removalMap=new Map;_debugLines=null;ecs=y();testSystem=null;transformSystem=null;uuid;wrapperRef=null;camera;cameraRef=null;_setup;_update;_destroy;constructor(e=[]){this.world=null,this.scene=null,this.uuid=D();const{config:t,entities:s,camera:o}=this.parseOptions(e);if(this.camera=o,this.children=s,this.saveState({backgroundColor:t.backgroundColor??this.state.backgroundColor,backgroundImage:t.backgroundImage??this.state.backgroundImage,inputs:t.inputs??this.state.inputs,gravity:t.gravity??this.state.gravity,variables:t.variables??this.state.variables,conditions:t.conditions,children:t.children,entities:this.state.entities}),this.gravity=t.gravity??new l(0,0,0),this.conditions=t.conditions??[],t.children){const a=t.children({globals:h.globals});this.children=[...this.children,...a]}const i=this;window.onresize=function(){i.resize(window.innerWidth,window.innerHeight)}}parseOptions(e){let t={};const s=[];let o;for(const i of e)this.isZylemStageConfig(i)?t={...t,...i}:this.isBaseNode(i)?s.push(i):this.isCameraWrapper(i)&&(o=i);return{config:t,entities:s,camera:o}}isZylemStageConfig(e){return e&&typeof e=="object"&&!(e instanceof Z)}isBaseNode(e){return e&&typeof e=="object"&&typeof e.create=="function"}isCameraWrapper(e){return e&&typeof e=="object"&&e.constructor.name==="CameraWrapper"}saveState(e){this.state=e}setState(){const{backgroundColor:e,backgroundImage:t}=this.state;L(e),I(t)}async load(e,t){this.setState();const s=t||(this.camera?this.camera.cameraRef:this.createDefaultCamera());this.cameraRef=s,this.scene=new O(e,s);const o=await f.loadPhysics(this.gravity??new l(0,0,0));this.world=new f(o),this.scene.setup();for(let i of this.children)this.spawnEntity(i);W(this.children),this.transformSystem=A(this)}createDefaultCamera(){const e=window.innerWidth,t=window.innerHeight,s=new k(e,t);return new x(H.ThirdPerson,s)}setup(e){if(!this.scene||!this.world){this.logMissingEntities();return}u.on&&(this._debugLines=new R(new B,new z({vertexColors:!0})),this.scene.scene.add(this._debugLines),this._debugLines.visible=!0),this._setup&&this._setup({...e,entity:this,stage:this})}update(e){const{delta:t}=e;if(!this.scene||!this.world){this.logMissingEntities();return}this.world.update(e),this.transformSystem(this.ecs),this._childrenMap.forEach((s,o)=>{s.nodeUpdate({...e,entity:s})}),this._update&&this._update({...e,entity:this}),this.scene.update({delta:t}),u.on&&this.debugStage(this.world.world)}destroy(e){this.world?.destroy(),this.scene?.destroy(),this._destroy&&this._destroy({...e,entity:this})}async spawnEntity(e){if(!this.scene||!this.world)return;const t=e.create(),s=w(this.ecs);if(t.eid=s,t.group?this.scene.scene.add(t.group):t.mesh&&this.scene.scene.add(t.mesh),e.behaviors)for(let o of e.behaviors){b(this.ecs,o.component,t.eid);const i=Object.keys(o.values);for(const a of i)o.component[a][t.eid]=o.values[a]}t.colliderDesc&&this.world.addEntity(t),e.nodeSetup({entity:e,globals:{},camera:this.scene.zylemCamera}),this.addEntityToStage(t)}addEntityToStage(e){this._childrenMap.set(`${e.eid}-key`,e)}debugStage(e){if(!this._debugLines)return;const{vertices:t,colors:s}=e.debugRender();this._debugLines.geometry.setAttribute("position",new g(t,3)),this._debugLines.geometry.setAttribute("color",new g(s,4))}getEntityByName(e){const s=Object.entries(Object.fromEntries(this._childrenMap)).map(o=>o[1]).find(o=>o.name===e);return s||console.warn(`Entity ${e} not found`),s??null}logMissingEntities(){console.warn("Zylem world or scene is null")}resize(e,t){this.scene&&this.scene.updateRenderer(e,t)}}class ${stageRef=null;options=[];update=()=>{};setup=()=>{};destroy=()=>{};constructor(e){this.options=e}async load(e,t){this.stageRef=new N(this.options),this.stageRef.wrapperRef=this;const s=t instanceof j?t.cameraRef:t;await this.stageRef.load(e,s)}async addEntities(e){this.options.push(...e)}start(e){this.stageRef?.setup(e)}}function X(...n){return new $(n)}export{$ as S,X as s};
