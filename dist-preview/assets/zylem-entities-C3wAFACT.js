import{R as x,U as S}from"./vendor-rapier-B1_KYila.js";import{S as K,B as N,c as V,A as O,p as q,L as Y,q as $,V as l,r as H,G as k,s as X,a as D,t as W}from"./vendor-three-CRJRX-3r.js";import{E as R}from"./zylem-core-CeCI51RE.js";import{B as w,Z as b}from"./zylem-foundation-DJZmtUpf.js";import{M as J,a as Q,X as ee}from"./zylem-graphics-CODEC42O.js";import{p as te,s as ie,r as se}from"./zylem-behaviors-DdgKh3cb.js";import{C as ne}from"./zylem-physics-DmoYthWA.js";const a=[];for(let s=0;s<256;++s)a.push((s+256).toString(16).slice(1));function oe(s,e=0){return(a[s[e+0]]+a[s[e+1]]+a[s[e+2]]+a[s[e+3]]+"-"+a[s[e+4]]+a[s[e+5]]+"-"+a[s[e+6]]+a[s[e+7]]+"-"+a[s[e+8]]+a[s[e+9]]+"-"+a[s[e+10]]+a[s[e+11]]+a[s[e+12]]+a[s[e+13]]+a[s[e+14]]+a[s[e+15]]).toLowerCase()}let I;const ae=new Uint8Array(16);function le(){if(!I){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");I=crypto.getRandomValues.bind(crypto)}return I(ae)}const re=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),T={randomUUID:re};function ce(s,e,i){if(T.randomUUID&&!e&&!s)return T.randomUUID();s=s||{};const t=s.random??s.rng?.()??le();if(t.length<16)throw new Error("Random bytes length must be >= 16");return t[6]=t[6]&15|64,t[8]=t[8]&63|128,oe(t)}class z extends w{group;uuid="";mesh;materials;bodyDesc=null;body=null;colliderDesc;collider;custom={};debugInfo={};lifeCycleDelegate;collisionDelegate;constructor(){super(),this.uuid=ce()}create(){const{position:e}=this.options,{x:i,y:t,z:n}=e||{x:0,y:0,z:0};return this.behaviors=[{component:te,values:{x:i,y:t,z:n}},{component:ie,values:{x:0,y:0,z:0}},{component:se,values:{x:0,y:0,z:0,w:0}}],this}onSetup(e){return this.setup=e,this}onUpdate(e){return this.update=e,this}onDestroy(e){return this.destroy=e,this}onCollision(e){debugger;return this.collisionDelegate={collision:e},this}_setup(e){this.lifeCycleDelegate?.setup&&this.lifeCycleDelegate.setup({...e,entity:this})}_update(e){this.updateMaterials(e),this.lifeCycleDelegate?.update&&this.lifeCycleDelegate.update({...e,entity:this})}_destroy(e){this.lifeCycleDelegate?.destroy&&this.lifeCycleDelegate.destroy({...e,entity:this})}_collision(e,i){this.collisionDelegate?.collision&&this.collisionDelegate.collision({entity:this,other:e,globals:i})}updateMaterials(e){if(this.materials?.length)for(const i of this.materials)i instanceof K&&i.uniforms&&(i.uniforms.iTime.value+=e.delta)}}class A extends ne{}class j extends J{buildGeometry(e){return new N}postBuild(){}}class ue{}class E{meshBuilder;collisionBuilder;materialBuilder;debugInfoBuilder=null;options;entity;constructor(e,i,t,n,o){this.options=e,this.entity=i,this.meshBuilder=t,this.collisionBuilder=n,this.debugInfoBuilder=o,this.materialBuilder=new Q,this.options._builders={meshBuilder:this.meshBuilder,collisionBuilder:this.collisionBuilder,materialBuilder:this.materialBuilder}}withPosition(e){return this.options.position=e,this}async withMaterial(e,i){return this.materialBuilder&&await this.materialBuilder.build(e,i),this}applyMaterialToGroup(e,i){e.traverse(t=>{t instanceof V&&t.type==="SkinnedMesh"&&i[0]&&!t.material.map&&(t.material=i[0]),t.castShadow=!0,t.receiveShadow=!0})}async build(){const e=this.entity;if(this.materialBuilder&&(e.materials=this.materialBuilder.materials),this.meshBuilder&&e.materials){const t=this.meshBuilder.buildGeometry(this.options);e.mesh=this.meshBuilder.build(this.options,t,e.materials),this.meshBuilder.postBuild()}e.group&&e.materials&&(console.log(e.group,e.materials),this.applyMaterialToGroup(e.group,e.materials));const i=new O(2);if(e.group?e.group.add(i):e.mesh?.add(i),this.collisionBuilder){this.collisionBuilder.withCollision(this.options?.collision||{}),this.collisionBuilder.withPhysics(this.options?.physics||{});const[t,n]=this.collisionBuilder.build(this.options);e.bodyDesc=t,e.colliderDesc=n;const{x:o,y:r,z:u}=this.options.position||{x:0,y:0,z:0};e.bodyDesc.setTranslation(o,r,u)}return this.debugInfoBuilder&&(e.debugInfo=this.debugInfoBuilder.buildInfo(this.options)),e}}function de(s){return typeof s?.load=="function"&&typeof s?.data=="function"}class he{entityReference;constructor(e){this.entityReference=e}async load(){this.entityReference.load&&await this.entityReference.load()}async data(){return this.entityReference.data?this.entityReference.data():null}}async function M(s){const{args:e,defaultConfig:i,EntityClass:t,BuilderClass:n,entityType:o,MeshBuilderClass:r,CollisionBuilderClass:u,DebugInfoBuilderClass:c}=s;let p=null,y;const f=e.findIndex(d=>!(d instanceof w));f!==-1&&(y=e.splice(f,1).find(h=>!(h instanceof w)));const m=y?{...i,...y}:i;e.push(m);for(const d of e){if(d instanceof w)continue;let h=null;const g=new t(d);try{if(de(g)){const B=new he(g);await B.load(),h=await B.data()}}catch(B){console.error("Error creating entity with loader:",B)}p=new n(d,g,r?new r(h):null,u?new u(h):null,c?new c(h):null),d.material&&await p.withMaterial(d.material,o)}if(!p)throw new Error(`missing options for ${String(o)}, builder is not initialized.`);return await p.build()}class pe{constructor(e){this.target=e}_mixer=null;_actions={};_animations=[];_currentAction=null;_pauseAtPercentage=0;_isPaused=!1;_queuedKey=null;_fadeDuration=.5;_currentKey="";_assetLoader=new R;async loadAnimations(e){if(!e.length)return;const i=await Promise.all(e.map(t=>this._assetLoader.loadFile(t.path)));this._animations=i.filter(t=>!!t.animation).map(t=>t.animation),this._animations.length&&(this._mixer=new q(this.target),this._animations.forEach((t,n)=>{const o=e[n].key||n.toString();this._actions[o]=this._mixer.clipAction(t)}),this.playAnimation({key:Object.keys(this._actions)[0]}))}update(e){if(!this._mixer||!this._currentAction)return;this._mixer.update(e);const i=this._currentAction.getClip().duration*(this._pauseAtPercentage/100);if(!this._isPaused&&this._pauseAtPercentage>0&&this._currentAction.time>=i&&(this._currentAction.time=i,this._currentAction.paused=!0,this._isPaused=!0,this._queuedKey!==null)){const t=this._actions[this._queuedKey];t.reset().play(),this._currentAction.crossFadeTo(t,this._fadeDuration,!1),this._currentAction=t,this._currentKey=this._queuedKey,this._queuedKey=null}}playAnimation(e){if(!this._mixer)return;const{key:i,pauseAtPercentage:t=0,pauseAtEnd:n=!1,fadeToKey:o,fadeDuration:r=.5}=e;if(i===this._currentKey)return;this._queuedKey=o||null,this._fadeDuration=r,this._pauseAtPercentage=n?100:t,this._isPaused=!1;const u=this._currentAction;u&&u.stop();const c=this._actions[i];c&&(this._pauseAtPercentage>0?(c.setLoop(Y,1/0),c.clampWhenFinished=!0):(c.setLoop($,1/0),c.clampWhenFinished=!1),u&&u.crossFadeTo(c,r,!1),c.reset().play(),this._currentAction=c,this._currentKey=i)}get currentAnimationKey(){return this._currentKey}get animations(){return this._animations}}const U={position:{x:0,y:0,z:0},collision:{static:!1,size:new l(.5,.5,.5),position:new l(0,0,0)},material:{shader:"standard"},animations:[],models:[]};class ye extends A{height=1;objectModel=null;constructor(e){super(),this.objectModel=e.objectModel}createColliderFromObjectModel(e){if(!e)return x.capsule(1,1);const t=e.children.find(o=>o instanceof H).geometry;if(t&&(t.computeBoundingBox(),t.boundingBox)){const o=t.boundingBox.max.y,r=t.boundingBox.min.y;this.height=o-r}this.height=1;let n=x.capsule(this.height/2,1);return n.setSensor(!1),n.setTranslation(0,this.height+.5,0),n.activeCollisionTypes=S.DEFAULT,n}collider(e){return this.createColliderFromObjectModel(this.objectModel)}}class me extends E{createEntity(e){return new P(e)}}const fe=Symbol("Actor");class P extends z{static type=fe;_object=null;_animationDelegate=null;_modelFileNames=[];_assetLoader=new R;controlledRotation=!1;constructor(e){super(),this.options={...U,...e},this.lifeCycleDelegate={update:this.actorUpdate.bind(this)},this.controlledRotation=!0}async load(){this._modelFileNames=this.options.models||[],await this.loadModels(),this._object&&(this._animationDelegate=new pe(this._object),await this._animationDelegate.loadAnimations(this.options.animations||[]))}async data(){return{animations:this._animationDelegate?.animations,objectModel:this._object}}async actorUpdate(e){this._animationDelegate?.update(e.delta)}async loadModels(){if(this._modelFileNames.length===0)return;const e=this._modelFileNames.map(t=>this._assetLoader.loadFile(t)),i=await Promise.all(e);i[0]?.object&&(this._object=i[0].object),this._object&&(this.group=new k,this.group.attach(this._object),this.group.scale.set(this.options.scale?.x||1,this.options.scale?.y||1,this.options.scale?.z||1))}playAnimation(e){this._animationDelegate?.playAnimation(e)}get object(){return this._object}}async function je(...s){return await M({args:s,defaultConfig:U,EntityClass:P,BuilderClass:me,CollisionBuilderClass:ye,entityType:P.type})}const F={size:new l(1,1,1),position:new l(0,0,0),collision:{static:!1},color:b,material:{color:b,shader:"standard"}};class ge extends A{collider(e){const i=e.size||new l(1,1,1),t={x:i.x/2,y:i.y/2,z:i.z/2};return x.cuboid(t.x,t.y,t.z)}}class _e extends j{buildGeometry(e){const i=e.size??new l(1,1,1);return new X(i.x,i.y,i.z)}}class xe extends E{createEntity(e){return new C(e)}}const be=Symbol("Box");class C extends z{static type=be;constructor(e){super(),this.options={...F,...e}}}class Be extends ue{buildInfo(e){const{x:i,z:t,y:n}=e.position??{x:0,y:0,z:0},o=`${i}, ${n}, ${t}`,{x:r,y:u,z:c}=e.size??{x:1,y:1,z:1},p=`${r}, ${u}, ${c}`;return{type:String(C.type),position:o,size:p,message:"box debug info"}}}async function Ue(...s){return M({args:s,defaultConfig:F,EntityClass:C,BuilderClass:xe,MeshBuilderClass:_e,CollisionBuilderClass:ge,DebugInfoBuilderClass:Be,entityType:C.type})}const _=4,L={tile:new D(10,10),repeat:new D(1,1),position:new l(0,0,0),collision:{static:!0},material:{color:b,shader:"standard"},subdivisions:_};class we extends A{collider(e){const i=e.tile??new D(1,1),t=e.subdivisions??_,n=new l(i.x,1,i.y),o=e._builders?.meshBuilder?.heightData,r=new l(n.x,1,n.z);return x.heightfield(t,t,o,r)}}class De extends j{heightData=new Float32Array;columnsRows=new Map;buildGeometry(e){const i=e.tile??new D(1,1),t=e.subdivisions??_,n=new l(i.x,1,i.y),o=new ee(n.x,n.z,t,t),r=new W(n.x,n.z,t,t),u=n.x/t,c=n.z/t,p=o.attributes.position.array,y=r.attributes.position.array,f=new Map;for(let m=0;m<y.length;m+=3){let d=Math.floor(Math.abs(y[m]+n.x/2)/u),h=Math.floor(Math.abs(y[m+1]-n.z/2)/c);const g=Math.random()*4;y[m+2]=g,p[m+1]=g,f.get(h)||f.set(h,new Map),f.get(h).set(d,g)}return this.columnsRows=f,o}postBuild(){const e=[];for(let i=0;i<=_;++i)for(let t=0;t<=_;++t){const n=this.columnsRows.get(t);if(!n)continue;const o=n.get(i);e.push(o)}this.heightData=new Float32Array(e)}}class Ce extends E{createEntity(e){return new Z(e)}}const ze=Symbol("Plane");class Z extends z{static type=ze;constructor(e){super(),this.options={...L,...e}}}async function Fe(...s){return M({args:s,defaultConfig:L,EntityClass:Z,BuilderClass:Ce,MeshBuilderClass:De,CollisionBuilderClass:we,entityType:Z.type})}new l(0,0,0),b;new l(1,1,1),new l(0,0,0),b;const G={size:new l(1,1,1),position:new l(0,0,0),collision:{static:!0},material:{shader:"standard"}};class Ae extends A{collider(e){const i=e.size||new l(1,1,1),t={x:i.x/2,y:i.y/2,z:i.z/2};let n=x.cuboid(t.x,t.y,t.z);return n.setSensor(!0),n.activeCollisionTypes=S.KINEMATIC_FIXED,n}}class Ee extends E{createEntity(e){return new v(e)}}const Me=Symbol("Zone");class v extends z{static type=Me;_enteredZone=new Map;_exitedZone=new Map;_zoneEntities=new Map;constructor(e){super(),this.options={...G,...e}}handlePostCollision({delta:e}){return this._enteredZone.forEach((i,t)=>{this.exited(e,t)}),this._enteredZone.size>0}handleIntersectionEvent({other:e,delta:i}){this._enteredZone.get(e.uuid)?this.held(i,e):(this.entered(e),this._zoneEntities.set(e.uuid,e))}entered(e){this._enteredZone.set(e.uuid,1),this.options.onEnter&&this.options.onEnter({self:this,visitor:e,globals:{}})}exited(e,i){const t=this._exitedZone.get(i);if(t&&t>1+e){this._exitedZone.delete(i),this._enteredZone.delete(i);const n=this._zoneEntities.get(i);this.options.onExit&&this.options.onExit({self:this,visitor:n,globals:{}});return}this._exitedZone.set(i,1+e)}held(e,i){const t=this._enteredZone.get(i.uuid)??0;this._enteredZone.set(i.uuid,t+e),this._exitedZone.set(i.uuid,1),this.options.onHeld&&this.options.onHeld({delta:e,self:this,visitor:i,globals:{},heldTime:t})}}async function Le(...s){return M({args:s,defaultConfig:G,EntityClass:v,BuilderClass:Ee,CollisionBuilderClass:Ae,entityType:v.type})}export{z as G,P as Z,je as a,Ue as b,Fe as p,ce as v,Le as z};
