"use strict";const a=require("./main-d1f9454c.js"),m=require("./colorToUniform-bcf717e0.js"),F=require("./CanvasPool-438d3256.js"),Ae=require("./getBatchSamplersUniformGroup-87a935ee.js");class ie{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:s}=this._resizeTo;t=i,r=s}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}ie.extension=a.ExtensionType.Application;class se{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,a.UPDATE_PRIORITY.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?a.Ticker.shared:new a.Ticker,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}se.extension=a.ExtensionType.Application;class Ge extends a.EventEmitter{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return a.deprecation(a.v8_0_0,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return a.deprecation(a.v8_0_0,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return a.deprecation(a.v8_0_0,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return a.deprecation(a.v8_0_0,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return a.deprecation(a.v8_0_0,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){var t;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(t=this.chars[r].texture)==null||t.destroy();this.chars=null,e&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}function G(n,e){if(n.texture===a.Texture.WHITE&&!n.fill)return a.Color.shared.setValue(n.color).toHex();if(n.fill){if(n.fill instanceof a.FillPattern){const t=n.fill,r=e.createPattern(t.texture.source.resource,"repeat"),i=t.transform.copyTo(a.Matrix.shared);return i.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(i),r}else if(n.fill instanceof a.FillGradient){const t=n.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(i=>{r.addColorStop(i.offset,a.Color.shared.setValue(i.color).toHex())}),r}}}else{const t=e.createPattern(n.texture.source.resource,"repeat"),r=n.matrix.copyTo(a.Matrix.shared);return r.scale(n.texture.frame.width,n.texture.frame.height),t.setTransform(r),t}return a.warn("FillStyle not recognised",n),"red"}function ne(n){if(n==="")return[];typeof n=="string"&&(n=[n]);const e=[];for(let t=0,r=n.length;t<r;t++){const i=n[t];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=i[0].charCodeAt(0),o=i[1].charCodeAt(0);if(o<s)throw new Error("[BitmapFont]: Invalid character range.");for(let l=s,c=o;l<=c;l++)e.push(String.fromCharCode(l))}else e.push(...Array.from(i))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}const ae=class oe extends Ge{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...oe.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=a.Texture.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const s=a.fontStringFromTextStyle(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=a.CanvasTextMetrics.measureFont(s),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var g,_;const t=ne(e).filter(b=>!this._currentChars.includes(b)).filter((b,y,T)=>T.indexOf(b)===y);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:s}=r.canvasAndContext,o=r.texture.source;const l=this._style;let c=this._currentX,h=this._currentY;const d=this.baseRenderedFontSize/this.baseMeasurementFontSize,u=this._padding*d,x=l.fontStyle==="italic"?2:1;let p=0,f=!1;for(let b=0;b<t.length;b++){const y=t[b],T=a.CanvasTextMetrics.measureText(y,l,i,!1);T.lineHeight=T.height;const v=x*T.width*d,w=T.height*d,P=v+u*2,S=w+u*2;if(f=!1,y!==`
`&&y!=="\r"&&y!=="	"&&y!==" "&&(f=!0,p=Math.ceil(Math.max(S,p))),c+P>this._textureSize&&(h+=p,p=S,c=0,h+p>this._textureSize)){o.update();const M=this._nextPage();i=M.canvasAndContext.canvas,s=M.canvasAndContext.context,o=M.texture.source,h=0}const C=v/d-(((g=l.dropShadow)==null?void 0:g.distance)??0)-(((_=l._stroke)==null?void 0:_.width)??0);if(this.chars[y]={id:y.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:C,kerning:{}},f){this._drawGlyph(s,T,c+u,h+u,d,l);const M=o.width*d,R=o.height*d,z=new a.Rectangle(c/M*o.width,h/R*o.height,P/M*o.width,S/R*o.height);this.chars[y].texture=new a.Texture({source:o,frame:z}),c+=Math.ceil(P)}}o.update(),this._currentX=c,this._currentY=h,this._skipKerning&&this._applyKerning(t,s)}get pageTextures(){return a.deprecation(a.v8_0_0,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let i=0;i<e.length;i++){const s=e[i];for(let o=0;o<this._currentChars.length;o++){const l=this._currentChars[o];let c=r[s];c||(c=r[s]=t.measureText(s).width);let h=r[l];h||(h=r[l]=t.measureText(l).width);let d=t.measureText(s+l).width,u=d-(c+h);u&&(this.chars[s].kerning[l]=u),d=t.measureText(s+l).width,u=d-(c+h),u&&(this.chars[l].kerning[s]=u)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=F.CanvasPool.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new a.Texture({source:new a.ImageSource({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),s={canvasAndContext:t,texture:i};return this.pages[this._currentPageIndex]=s,s}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=a.fontStringFromTextStyle(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const i=t._stroke,s=(i==null?void 0:i.width)??0;if(i&&(e.lineWidth=s,e.lineJoin=i.join,e.miterLimit=i.miterLimit,e.strokeStyle=G(i,e)),t._fill&&(e.fillStyle=G(t._fill,e)),t.dropShadow){const o=t.dropShadow,l=a.Color.shared.setValue(o.color).toArray(),c=o.blur*r,h=o.distance*r;e.shadowColor=`rgba(${l[0]*255},${l[1]*255},${l[2]*255},${o.alpha})`,e.shadowBlur=c,e.shadowOffsetX=Math.cos(o.angle)*h,e.shadowOffsetY=Math.sin(o.angle)*h}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,i,s,o){const l=t.text,c=t.fontProperties,h=o._stroke,d=((h==null?void 0:h.width)??0)*s,u=r+d/2,x=i-d/2,p=c.descent*s,f=t.lineHeight*s;o.stroke&&d&&e.strokeText(l,u,x+f-p),o._fill&&e.fillText(l,u,x+f-p)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];t.canvas.width=t.canvas.width,F.CanvasPool.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};ae.defaultOptions={textureSize:512,style:new a.TextStyle,mipmap:!0};let j=ae;function le(n,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let i=r.lines[0],s=null,o=!0;const l={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},c=p=>{const f=i.width;for(let g=0;g<l.index;g++){const _=p.positions[g];i.chars.push(p.chars[g]),i.charPositions.push(_+f)}i.width+=p.width,o=!1,l.width=0,l.index=0,l.chars.length=0},h=()=>{let p=i.chars.length-1,f=i.chars[p];for(;f===" ";)i.width-=t.chars[f].xAdvance,f=i.chars[--p];r.width=Math.max(r.width,i.width),i={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,r.lines.push(i),r.height+=t.lineHeight},d=t.baseMeasurementFontSize/e.fontSize,u=e.letterSpacing*d,x=e.wordWrapWidth*d;for(let p=0;p<n.length+1;p++){let f;const g=p===n.length;g||(f=n[p]);const _=t.chars[f]||t.chars[" "];if(/(?:\s)/.test(f)||f==="\r"||f===`
`||g){if(!o&&e.wordWrap&&i.width+l.width-u>x?(h(),c(l),g||i.charPositions.push(0)):(l.start=i.width,c(l),g||i.charPositions.push(0)),f==="\r"||f===`
`)i.width!==0&&h();else if(!g){const v=_.xAdvance+(_.kerning[s]||0)+u;i.width+=v,i.spaceWidth=v,i.spacesIndex.push(i.charPositions.length),i.chars.push(f)}}else{const T=_.kerning[s]||0,v=_.xAdvance+T+u;l.positions[l.index++]=l.width+T,l.chars.push(f),l.width+=v}s=f}return h(),e.align==="center"?ze(r):e.align==="right"?He(r):e.align==="justify"&&We(r),r}function ze(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width/2-t.width/2;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function He(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width-t.width;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function We(n){const e=n.width;for(let t=0;t<n.lines.length;t++){const r=n.lines[t];let i=0,s=r.spacesIndex[i++],o=0;const l=r.spacesIndex.length,h=(e-r.width)/l;for(let d=0;d<r.charPositions.length;d++)d===s&&(s=r.spacesIndex[i++],o+=h),r.charPositions[d]+=o}}let U=0;class Ee{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var o;let r=`${t.fontFamily}-bitmap`,i=!0;if(t._fill.fill&&!t._stroke)r+=t._fill.fill.styleKey,i=!1;else if(t._stroke||t.dropShadow){let l=t.styleKey;l=l.substring(0,l.lastIndexOf("-")),r=`${l}-bitmap`,i=!1}if(!a.Cache.has(r)){const l=new j({style:t,overrideFill:i,overrideSize:!0,...this.defaultOptions});U++,U>50&&a.warn("BitmapText",`You have dynamically created ${U} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),l.once("destroy",()=>{U--,a.Cache.remove(r)}),a.Cache.set(r,l)}const s=a.Cache.get(r);return(o=s.ensureCharacters)==null||o.call(s,e),s}getLayout(e,t){const r=this.getFont(e,t);return le([...e],t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){var h,d,u,x;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(h=e[2])==null?void 0:h.chars,resolution:(d=e[2])==null?void 0:d.resolution,padding:(u=e[2])==null?void 0:u.padding,skipKerning:(x=e[2])==null?void 0:x.skipKerning},a.deprecation(a.v8_0_0,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const i=t.style,s=i instanceof a.TextStyle?i:new a.TextStyle(i),o=s._fill.fill!==null&&s._fill.fill!==void 0,l=new j({style:s,overrideFill:o,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),c=ne(t.chars);return l.ensureCharacters(c.join("")),a.Cache.set(`${r}-bitmap`,l),l.once("destroy",()=>a.Cache.remove(`${r}-bitmap`)),l}uninstall(e){const t=`${e}-bitmap`,r=a.Cache.get(t);r&&(a.Cache.remove(t),r.destroy())}}const De=new Ee;class ce{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}ce.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"filter"};const Oe=new a.Matrix;function Ie(n,e){return e.clear(),he(n,e),e.isValid||e.set(0,0,0,0),n.renderGroup?e.applyMatrix(n.renderGroup.localTransform):e.applyMatrix(n.parentRenderGroup.worldTransform),e}function he(n,e){if(n.localDisplayStatus!==7||!n.measurable)return;const t=!!n.effects.length;let r=e;if((n.renderGroup||t)&&(r=a.boundsPool.get().clear()),n.boundsArea)e.addRect(n.boundsArea,n.worldTransform);else{if(n.renderPipeId){const s=n.bounds;r.addFrame(s.minX,s.minY,s.maxX,s.maxY,n.groupTransform)}const i=n.children;for(let s=0;s<i.length;s++)he(i[s],r)}if(t){let i=!1;for(let s=0;s<n.effects.length;s++)n.effects[s].addBounds&&(i||(i=!0,r.applyMatrix(n.parentRenderGroup.worldTransform)),n.effects[s].addBounds(r,!0));i&&(r.applyMatrix(n.parentRenderGroup.worldTransform.copyTo(Oe).invert()),e.addBounds(r,n.relativeGroupTransform)),e.addBounds(r),a.boundsPool.return(r)}else n.renderGroup&&(e.addBounds(r,n.relativeGroupTransform),a.boundsPool.return(r))}function Le(n,e){e.clear();const t=e.matrix;for(let r=0;r<n.length;r++){const i=n[r];i.globalDisplayStatus<7||(e.matrix=i.worldTransform,i.addBounds(e))}return e.matrix=t,e}const $e=new a.Geometry({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class de{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new m.UniformGroup({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new a.BindGroup({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var p;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const i=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){i.skip=!0;return}const s=i.bounds;e.renderables?Le(e.renderables,s):e.filterEffect.filterArea?(s.clear(),s.addRect(e.filterEffect.filterArea),s.applyMatrix(e.container.worldTransform)):Ie(e.container,s);const o=t.renderTarget.rootRenderTarget.colorTexture.source;let l=o._resolution,c=0,h=o.antialias,d=!1,u=!1;for(let f=0;f<r.length;f++){const g=r[f];if(l=Math.min(l,g.resolution),c+=g.padding,g.antialias!=="inherit"&&(g.antialias==="on"?h=!0:h=!1),!!!(g.compatibleRenderers&t.type)){u=!1;break}if(g.blendRequired&&!(((p=t.backBuffer)==null?void 0:p.useBackBuffer)??!0)){a.warn("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),u=!1;break}u=g.enabled||u,d=d||g.blendRequired}if(!u){i.skip=!0;return}const x=t.renderTarget.rootViewPort;if(s.scale(l).fitBounds(0,x.width,0,x.height).scale(1/l).pad(c).ceil(),!s.isPositive){i.skip=!0;return}i.skip=!1,i.bounds=s,i.blendRequired=d,i.container=e.container,i.filterEffect=e.filterEffect,i.previousRenderSurface=t.renderTarget.renderSurface,i.inputTexture=m.TexturePool.getOptimalTexture(s.width,s.height,l,h),t.renderTarget.bind(i.inputTexture,!0),t.globalUniforms.push({offset:s})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,i=t.bounds;let s=a.Texture.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const l=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,c=e.renderTarget.getRenderTarget(t.previousRenderSurface);s=this.getBackTexture(c,i,l)}t.backTexture=s;const o=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(s.source,3),e.globalUniforms.pop(),o.length===1)o[0].apply(this,r,t.previousRenderSurface,!1),m.TexturePool.returnTexture(r);else{let l=t.inputTexture,c=m.TexturePool.getOptimalTexture(i.width,i.height,l.source._resolution,!1),h=0;for(h=0;h<o.length-1;++h){o[h].apply(this,l,c,!0);const u=l;l=c,c=u}o[h].apply(this,l,t.previousRenderSurface,!1),m.TexturePool.returnTexture(l),m.TexturePool.returnTexture(c)}t.blendRequired&&m.TexturePool.returnTexture(s)}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,s=m.TexturePool.getOptimalTexture(t.width,t.height,i,!1);let o=t.minX,l=t.minY;r&&(o-=r.minX,l-=r.minY),o=Math.floor(o*i),l=Math.floor(l*i);const c=Math.ceil(t.width*i),h=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,s,{x:o,y:l},{width:c,height:h},{x:0,y:0}),s}applyFilter(e,t,r,i){const s=this.renderer,o=this._filterStack[this._filterStackIndex],l=o.bounds,c=a.Point.shared,d=o.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,x=this._filterStackIndex-1;for(;x>0&&this._filterStack[x].skip;)--x;x>0&&(u=this._filterStack[x].inputTexture.source._resolution);const p=this._filterGlobalUniforms,f=p.uniforms,g=f.uOutputFrame,_=f.uInputSize,b=f.uInputPixel,y=f.uInputClamp,T=f.uGlobalFrame,v=f.uOutputTexture;if(d){let S=this._filterStackIndex;for(;S>0;){S--;const C=this._filterStack[this._filterStackIndex-1];if(!C.skip){c.x=C.bounds.minX,c.y=C.bounds.minY;break}}g[0]=l.minX-c.x,g[1]=l.minY-c.y}else g[0]=0,g[1]=0;g[2]=t.frame.width,g[3]=t.frame.height,_[0]=t.source.width,_[1]=t.source.height,_[2]=1/_[0],_[3]=1/_[1],b[0]=t.source.pixelWidth,b[1]=t.source.pixelHeight,b[2]=1/b[0],b[3]=1/b[1],y[0]=.5*b[2],y[1]=.5*b[3],y[2]=t.frame.width*_[2]-.5*b[2],y[3]=t.frame.height*_[3]-.5*b[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;T[0]=c.x*u,T[1]=c.y*u,T[2]=w.source.width*u,T[3]=w.source.height*u;const P=this.renderer.renderTarget.getRenderTarget(r);if(s.renderTarget.bind(r,!!i),r instanceof a.Texture?(v[0]=r.frame.width,v[1]=r.frame.height):(v[0]=P.width,v[1]=P.height),v[2]=P.isRoot?-1:1,p.update(),s.renderPipes.uniformBatch){const S=s.renderPipes.uniformBatch.getUboResource(p);this._globalFilterBindGroup.setResource(S,0)}else this._globalFilterBindGroup.setResource(p,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,s.encoder.draw({geometry:$e,shader:e,state:e._state,topology:"triangle-list"}),s.type===m.RendererType.WEBGL&&s.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new a.Bounds,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),s=t.worldTransform.copyTo(a.Matrix.shared);return s.invert(),i.prepend(s),i.scale(1/t.texture.frame.width,1/t.texture.frame.height),i.translate(t.anchor.x,t.anchor.y),i}}de.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem],name:"filter"};const ue=class pe extends a.Geometry{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(a.deprecation(a.v8_0_0,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...pe.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),i=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),s=t.indices||new Uint32Array([0,1,2,0,2,3]),o=t.shrinkBuffersToFit,l=new a.Buffer({data:r,label:"attribute-mesh-positions",shrinkToFit:o,usage:a.BufferUsage.VERTEX|a.BufferUsage.COPY_DST}),c=new a.Buffer({data:i,label:"attribute-mesh-uvs",shrinkToFit:o,usage:a.BufferUsage.VERTEX|a.BufferUsage.COPY_DST}),h=new a.Buffer({data:s,label:"index-mesh-buffer",shrinkToFit:o,usage:a.BufferUsage.INDEX|a.BufferUsage.COPY_DST});super({attributes:{aPosition:{buffer:l,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:c,format:"float32x2",stride:2*4,offset:0}},indexBuffer:h,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};ue.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let O=ue;function Ye(n){const e=n._stroke,t=n._fill,i=[`div { ${[`color: ${a.Color.shared.setValue(t.color).toHex()}`,`font-size: ${n.fontSize}px`,`font-family: ${n.fontFamily}`,`font-weight: ${n.fontWeight}`,`font-style: ${n.fontStyle}`,`font-variant: ${n.fontVariant}`,`letter-spacing: ${n.letterSpacing}px`,`text-align: ${n.align}`,`padding: ${n.padding}px`,`white-space: ${n.whiteSpace==="pre"&&n.wordWrap?"pre-wrap":n.whiteSpace}`,...n.lineHeight?[`line-height: ${n.lineHeight}px`]:[],...n.wordWrap?[`word-wrap: ${n.breakWords?"break-all":"break-word"}`,`max-width: ${n.wordWrapWidth}px`]:[],...e?[ge(e)]:[],...n.dropShadow?[fe(n.dropShadow)]:[],...n.cssOverrides].join(";")} }`];return Xe(n.tagStyles,i),i.join(" ")}function fe(n){const e=a.Color.shared.setValue(n.color).setAlpha(n.alpha).toHexa(),t=Math.round(Math.cos(n.angle)*n.distance),r=Math.round(Math.sin(n.angle)*n.distance),i=`${t}px ${r}px`;return n.blur>0?`text-shadow: ${i} ${n.blur}px ${e}`:`text-shadow: ${i} ${e}`}function ge(n){return[`-webkit-text-stroke-width: ${n.width}px`,`-webkit-text-stroke-color: ${a.Color.shared.setValue(n.color).toHex()}`,`text-stroke-width: ${n.width}px`,`text-stroke-color: ${a.Color.shared.setValue(n.color).toHex()}`,"paint-order: stroke"].join(";")}const V={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},q={fill:n=>`color: ${a.Color.shared.setValue(n).toHex()}`,breakWords:n=>`word-wrap: ${n?"break-all":"break-word"}`,stroke:ge,dropShadow:fe};function Xe(n,e){for(const t in n){const r=n[t],i=[];for(const s in r)q[s]?i.push(q[s](r[s])):V[s]&&i.push(V[s].replace("{{VALUE}}",r[s]));e.push(`${t} { ${i.join(";")} }`)}}class I extends a.TextStyle{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=a.generateTextStyleKey(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new I({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Ye(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&a.warn("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&a.warn("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const N="http://www.w3.org/2000/svg",Q="http://www.w3.org/1999/xhtml";class xe{constructor(){this.svgRoot=document.createElementNS(N,"svg"),this.foreignObject=document.createElementNS(N,"foreignObject"),this.domElement=document.createElementNS(Q,"div"),this.styleElement=document.createElementNS(Q,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i)}}let J;function Ke(n,e,t,r){r=r||J||(J=new xe);const{domElement:i,styleElement:s,svgRoot:o}=r;i.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(s.textContent=t),document.body.appendChild(o);const l=i.getBoundingClientRect();o.remove();const c=a.CanvasTextMetrics.measureFont(e.fontStyle).descent;return{width:l.width,height:l.height+c}}class me{constructor(e,t){this.state=m.State.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],i=this.renderer.graphicsContext.updateGpuContext(t);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const i=t[r];i.batcher.updateElement(i)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const o=s.resources.localUniforms.uniforms;o.uTransformMatrix=e.groupTransform,o.uRound=t._roundPixels|e._roundPixels,m.color32BitToUniform(e.groupColorAlpha,o.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(e);for(let s=0;s<i.length;s++){const o=i[s];r.addToBatch(o,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),i=this.renderer._roundPixels|e._roundPixels,s=r.batches.map(o=>{const l=a.BigPool.get(a.BatchableGraphics);return o.copyTo(l),l.renderable=e,l.roundPixels=i,l});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",()=>{this.destroyRenderable(e)}),this._graphicsBatchesHash[e.uid]=s,s}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{a.BigPool.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}me.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"graphics"};const _e=class be extends O{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(a.deprecation(a.v8_0_0,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...be.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],i=[],s=[],o=this.verticesX-1,l=this.verticesY-1,c=this.width/o,h=this.height/l;for(let u=0;u<t;u++){const x=u%this.verticesX,p=u/this.verticesX|0;r.push(x*c,p*h),i.push(x/o,p/l)}const d=o*l;for(let u=0;u<d;u++){const x=u%o,p=u/o|0,f=p*this.verticesX+x,g=p*this.verticesX+x+1,_=(p+1)*this.verticesX+x,b=(p+1)*this.verticesX+x+1;s.push(f,g,_,g,b,_)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};_e.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let je=_e;class L{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const i=this.geometry.indices;for(let s=0;s<i.length;s++)e[t++]=i[s]+r}packAttributes(e,t,r,i){const s=this.mesh,o=this.geometry,l=s.groupTransform,c=i<<16|this.roundPixels&65535,h=l.a,d=l.b,u=l.c,x=l.d,p=l.tx,f=l.ty,g=o.positions,_=o.getBuffer("aUV"),b=_.data;let y=b;const T=this.texture.textureMatrix;T.isSimple||(y=this._transformedUvs,(this._textureMatrixUpdateId!==T._updateID||this._uvUpdateId!==_._updateID)&&((!y||y.length<b.length)&&(y=this._transformedUvs=new Float32Array(b.length)),this._textureMatrixUpdateId=T._updateID,this._uvUpdateId=_._updateID,T.multiplyUvs(b,y)));const v=s.groupColorAlpha;for(let w=0;w<g.length;w+=2){const P=g[w],S=g[w+1];e[r]=h*P+u*S+p,e[r+1]=d*P+x*S+f,e[r+2]=y[w],e[r+3]=y[w+1],t[r+4]=v,t[r+5]=c,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Te{constructor(e,t){this.localUniforms=new m.UniformGroup({uTransformMatrix:{value:new a.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new a.BindGroup({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const s=e._geometry;if(s.indices.length!==t.indexSize||s.positions.length!==t.vertexSize)return t.indexSize=s.indices.length,t.vertexSize=s.positions.length,!0;const o=this._getBatchableMesh(e),l=e.texture;if(o.texture._source!==l._source&&o.texture._source!==l._source)return!o.batcher.checkAndUpdateTexture(o,l)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(e);if(i){const s=this._getBatchableMesh(e);s.texture=e._texture,s.geometry=e._geometry,r.addToBatch(s)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(a.BigPool.return(t),this._gpuBatchableMeshHash[e.uid]=null)}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=a.getAdjustedBlendModeBlend(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),m.color32BitToUniform(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=a.BigPool.get(L);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&a.BigPool.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}Te.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"mesh"};const ye=class ve extends je{constructor(e={}){e={...ve.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,i=this._topHeight+this._bottomHeight,s=this.height>i?1:this.height/i,o=Math.min(r,s);e[9]=e[11]=e[13]=e[15]=this._topHeight*o,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*o,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*o,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*o,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};ye.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Ve=ye;class we{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];a.BigPool.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new L;return t.geometry=new Ve,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}we.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"nineSliceSprite"};const qe={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Ne={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let H,W;class Qe extends m.Shader{constructor(){H??(H=m.compileHighShaderGpuProgram({name:"tiling-sprite-shader",bits:[m.localUniformBit,qe,m.roundPixelsBit]})),W??(W=m.compileHighShaderGlProgram({name:"tiling-sprite-shader",bits:[m.localUniformBitGl,Ne,m.roundPixelsBitGl]}));const e=new m.UniformGroup({uMapCoord:{value:new a.Matrix,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new a.Matrix,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:W,gpuProgram:H,resources:{localUniforms:new m.UniformGroup({uTransformMatrix:{value:new a.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:a.Texture.EMPTY.source,uSampler:a.Texture.EMPTY.source.style}})}updateUniforms(e,t,r,i,s,o){const l=this.resources.tilingUniforms,c=o.width,h=o.height,d=o.textureMatrix,u=l.uniforms.uTextureTransform;u.set(r.a*c/e,r.b*c/t,r.c*h/e,r.d*h/t,r.tx/e,r.ty/t),u.invert(),l.uniforms.uMapCoord=d.mapCoord,l.uniforms.uClampFrame=d.uClampFrame,l.uniforms.uClampOffset=d.uClampOffset,l.uniforms.uTextureTransform=u,l.uniforms.uSizeAnchor[0]=e,l.uniforms.uSizeAnchor[1]=t,l.uniforms.uSizeAnchor[2]=i,l.uniforms.uSizeAnchor[3]=s,o&&(this.resources.uTexture=o.source,this.resources.uSampler=o.source.style)}}class Je extends O{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Ze(n,e){const t=n.anchor.x,r=n.anchor.y;e[0]=-t*n.width,e[1]=-r*n.height,e[2]=(1-t)*n.width,e[3]=-r*n.height,e[4]=(1-t)*n.width,e[5]=(1-r)*n.height,e[6]=-t*n.width,e[7]=(1-r)*n.height}function et(n,e,t,r){let i=0;const s=n.length/(e||2),o=r.a,l=r.b,c=r.c,h=r.d,d=r.tx,u=r.ty;for(t*=e;i<s;){const x=n[t],p=n[t+1];n[t]=o*x+c*p+d,n[t+1]=l*x+h*p+u,t+=e,i++}}function tt(n,e){const t=n.texture,r=t.frame.width,i=t.frame.height;let s=0,o=0;n._applyAnchorToTexture&&(s=n.anchor.x,o=n.anchor.y),e[0]=e[6]=-s,e[2]=e[4]=1-s,e[1]=e[3]=-o,e[5]=e[7]=1-o;const l=a.Matrix.shared;l.copyFrom(n._tileTransform.matrix),l.tx/=n.width,l.ty/=n.height,l.invert(),l.scale(n.width/r,n.height/i),et(e,2,0,l)}const k=new Je;class Se{constructor(e){this._state=m.State.default2d,this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:s}=t;if(s&&s.texture._source!==e.texture._source)return!s.batcher.checkAndUpdateTexture(s,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:s,canBatch:o}=i;if(o){i.batchableMesh||(i.batchableMesh=new L);const l=i.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),l.geometry=s,l.mesh=e,l.texture=e._texture),l.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(l)}else r.break(t),i.shader||(i.shader=new Qe),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,m.color32BitToUniform(e.groupColorAlpha,r.uColor,0),this._state.blendMode=a.getAdjustedBlendModeBlend(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:k,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:i}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),i.batcher.updateElement(i)}else if(e._didTilingSpriteUpdate){const{shader:i}=t;i.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new O({indices:k.indices,positions:k.positions.slice(),uvs:k.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),tt(e,r.uvs),Ze(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===m.RendererType.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}Se.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"tilingSprite"};const rt={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},it={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},st={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},nt={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let E,D;class at extends m.Shader{constructor(){const e=new m.UniformGroup({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new a.Matrix,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=a.getMaxTexturesPerBatch();E??(E=m.compileHighShaderGpuProgram({name:"sdf-shader",bits:[m.colorBit,m.generateTextureBatchBit(t),rt,st,m.roundPixelsBit]})),D??(D=m.compileHighShaderGlProgram({name:"sdf-shader",bits:[m.colorBitGl,m.generateTextureBatchBitGl(t),it,nt,m.roundPixelsBitGl]})),super({glProgram:D,gpuProgram:E,resources:{localUniforms:e,batchSamplers:Ae.getBatchSamplersUniformGroup(t)}})}}class Ce{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Z(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(a.BigPool.return(t.customShader),t.customShader=null),a.BigPool.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);Z(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=De.getFont(e.text,e._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=a.BigPool.get(at)));const s=Array.from(e.text),o=e._style;let l=i.baseLineOffset;const c=le(s,o,i);let h=0;const d=o.padding,u=c.scale;let x=c.width,p=c.height+c.offsetY;o._stroke&&(x+=o._stroke.width/u,p+=o._stroke.width/u),r.translate(-e._anchor._x*x-d,-e._anchor._y*p-d).scale(u,u);const f=i.applyFillAsTint?o._fill.color:16777215;for(let g=0;g<c.lines.length;g++){const _=c.lines[g];for(let b=0;b<_.charPositions.length;b++){const y=s[h++],T=i.chars[y];T!=null&&T.texture&&r.texture(T.texture,f||"black",Math.round(_.charPositions[b]+T.xOffset),Math.round(l+T.yOffset))}l+=i.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=a.BigPool.get(a.Graphics);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=a.Cache.get(`${r}-bitmap`),{a:s,b:o,c:l,d:c}=e.groupTransform,h=Math.sqrt(s*s+o*o),d=Math.sqrt(l*l+c*c),u=(Math.abs(h)+Math.abs(d))/2,x=i.baseRenderedFontSize/e._style.fontSize,p=u*i.distanceField.range*(1/x);t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}Ce.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"bitmapText"};function Z(n,e){e.groupTransform=n.groupTransform,e.groupColorAlpha=n.groupColorAlpha,e.groupColor=n.groupColor,e.groupBlendMode=n.groupBlendMode,e.globalDisplayStatus=n.globalDisplayStatus,e.groupTransform=n.groupTransform,e.localDisplayStatus=n.localDisplayStatus,e.groupAlpha=n.groupAlpha,e._roundPixels=n._roundPixels}class Be{constructor(e){this._gpuText=Object.create(null),this._renderer=e,this._renderer.runners.resolutionChange.add(this)}resolutionChange(){for(const e in this._gpuText){const r=this._gpuText[e].batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),a.BigPool.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(o=>{console.error(o)}),e._didTextUpdate=!1;const s=e._style.padding;a.updateQuadBounds(i.bounds,e._anchor,i.texture,s)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const i=e.resolution??this._renderer.resolution,s=await this._renderer.htmlText.getManagedTexture(e.text,i,e._style,e._getKey()),o=t.batchableSprite;o.texture=t.texture=s,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const l=e._style.padding;a.updateQuadBounds(o.bounds,e._anchor,o.texture,l)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:a.Texture.EMPTY,currentKey:"--",batchableSprite:a.BigPool.get(m.BatchableSprite),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=a.Texture.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Be.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"htmlText"};function ot(){const{userAgent:n}=a.DOMAdapter.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(n)}const lt=new a.Bounds;function Pe(n,e,t,r){const i=lt;i.minX=0,i.minY=0,i.maxX=n.width/r|0,i.maxY=n.height/r|0;const s=m.TexturePool.getOptimalTexture(i.width,i.height,r,!1);return s.source.uploadMethodId="image",s.source.resource=n,s.source.alphaMode="premultiply-alpha-on-upload",s.frame.width=e/r,s.frame.height=t/r,s.source.emit("update",s.source),s.updateUvs(),s}function ct(n,e){const t=e.fontFamily,r=[],i={},s=/font-family:([^;"\s]+)/g,o=n.match(s);function l(c){i[c]||(r.push(c),i[c]=!0)}if(Array.isArray(t))for(let c=0;c<t.length;c++)l(t[c]);else l(t);o&&o.forEach(c=>{const h=c.split(":")[1].trim();l(h)});for(const c in e.tagStyles){const h=e.tagStyles[c].fontFamily;l(h)}return r}async function ht(n){const t=await(await a.DOMAdapter.get().fetch(n)).blob(),r=new FileReader;return await new Promise((s,o)=>{r.onloadend=()=>s(r.result),r.onerror=o,r.readAsDataURL(t)})}async function ee(n,e){const t=await ht(e);return`@font-face {
        font-family: "${n.fontFamily}";
        src: url('${t}');
        font-weight: ${n.fontWeight};
        font-style: ${n.fontStyle};
    }`}const A=new Map;async function dt(n,e,t){const r=n.filter(i=>a.Cache.has(`${i}-and-url`)).map((i,s)=>{if(!A.has(i)){const{url:o}=a.Cache.get(`${i}-and-url`);s===0?A.set(i,ee({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:i},o)):A.set(i,ee({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:i},o))}return A.get(i)});return(await Promise.all(r)).join(`
`)}function ut(n,e,t,r,i){const{domElement:s,styleElement:o,svgRoot:l}=i;s.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,s.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),o.textContent=r;const{width:c,height:h}=i.image;return l.setAttribute("width",c.toString()),l.setAttribute("height",h.toString()),new XMLSerializer().serializeToString(l)}function pt(n,e){const t=F.CanvasPool.getOptimalCanvasAndContext(n.width,n.height,e),{context:r}=t;return r.clearRect(0,0,n.width,n.height),r.drawImage(n,0,0),F.CanvasPool.returnCanvasAndContext(t),t.canvas}function ft(n,e,t){return new Promise(async r=>{t&&await new Promise(i=>setTimeout(i,100)),n.onload=()=>{r()},n.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,n.crossOrigin="anonymous"})}class ${constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===m.RendererType.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const s=this._buildTexturePromise(e,t,r).then(o=>(this._activeTextures[i].texture=o,o));return this._activeTextures[i]={texture:null,promise:s,usageCount:1},s}async _buildTexturePromise(e,t,r){const i=a.BigPool.get(xe),s=ct(e,r),o=await dt(s,r,I.defaultTextStyle),l=Ke(e,r,o,i),c=Math.ceil(Math.ceil(Math.max(1,l.width)+r.padding*2)*t),h=Math.ceil(Math.ceil(Math.max(1,l.height)+r.padding*2)*t),d=i.image;d.width=c|0,d.height=h|0;const u=ut(e,r,t,o,i);await ft(d,u,ot()&&s.length>0);let x=d;this._createCanvas&&(x=pt(d,t));const p=Pe(x,d.width,d.height,t);return this._createCanvas&&this._renderer.texture.initSource(p.source),a.BigPool.return(i),p}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{a.warn("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){m.TexturePool.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}$.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem,a.ExtensionType.CanvasSystem],name:"htmlText"};$.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class Me{constructor(e){this._gpuText=Object.create(null),this._renderer=e,this._renderer.runners.resolutionChange.add(this)}resolutionChange(){for(const e in this._gpuText){const r=this._gpuText[e].batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const{width:i,height:s}=this._renderer.canvasText.getTextureSize(e.text,e.resolution,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&i===t.texture._source.width&&s===t.texture._source.height)}return!1}addRenderable(e,t){const i=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(i)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),a.BigPool.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const s=e._style.padding;a.updateQuadBounds(i.bounds,e._anchor,i.texture,s)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:a.BigPool.get(m.BatchableSprite)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Me.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"text"};function te(n,e,t){for(let r=0,i=4*t*e;r<e;++r,i+=4)if(n[i+3]!==0)return!1;return!0}function re(n,e,t,r,i){const s=4*e;for(let o=r,l=r*s+4*t;o<=i;++o,l+=s)if(n[l+3]!==0)return!1;return!0}function gt(n,e=1){const{width:t,height:r}=n,i=n.getContext("2d",{willReadFrequently:!0});if(i===null)throw new TypeError("Failed to get canvas 2D context");const o=i.getImageData(0,0,t,r).data;let l=0,c=0,h=t-1,d=r-1;for(;c<r&&te(o,t,c);)++c;if(c===r)return a.Rectangle.EMPTY;for(;te(o,t,d);)--d;for(;re(o,t,l,c,d);)++l;for(;re(o,t,h,c,d);)--h;return++h,++d,new a.Rectangle(l/e,c/e,(h-l)/e,(d-c)/e)}class Fe{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const i=a.CanvasTextMetrics.measureText(e||" ",r);let s=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t);return s=Math.ceil(s-1e-6),o=Math.ceil(o-1e-6),s=a.nextPow2(s),o=a.nextPow2(o),{width:s,height:o}}getTexture(e,t,r,i){typeof e=="string"&&(a.deprecation("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof a.TextStyle||(e.style=new a.TextStyle(e.style));const{texture:s,canvasAndContext:o}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(s._source),F.CanvasPool.returnCanvasAndContext(o),s}createTextureAndCanvas(e){const{text:t,style:r}=e,i=e.resolution??this._renderer.resolution,s=a.CanvasTextMetrics.measureText(t||" ",r),o=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*i),l=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*i),c=F.CanvasPool.getOptimalCanvasAndContext(o,l),{canvas:h}=c;this.renderTextToCanvas(t,r,i,c);const d=Pe(h,o,l,i);if(r.trim){const u=gt(h,i);d.frame.copyFrom(u),d.updateUvs()}return{texture:d,canvasAndContext:c}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){F.CanvasPool.returnCanvasAndContext(t.canvasAndContext),m.TexturePool.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,i){var T,v,w,P,S;const{canvas:s,context:o}=i,l=a.fontStringFromTextStyle(t),c=a.CanvasTextMetrics.measureText(e||" ",t),h=c.lines,d=c.lineHeight,u=c.lineWidths,x=c.maxLineWidth,p=c.fontProperties,f=s.height;o.resetTransform(),o.scale(r,r);const g=t.padding*2;if(o.clearRect(0,0,c.width+4+g,c.height+4+g),(T=t._stroke)!=null&&T.width){const C=t._stroke;o.lineWidth=C.width,o.miterLimit=C.miterLimit,o.lineJoin=C.join,o.lineCap=C.cap}o.font=l;let _,b;const y=t.dropShadow?2:1;for(let C=0;C<y;++C){const M=t.dropShadow&&C===0,R=M?Math.ceil(Math.max(1,f)+t.padding*2):0,z=R*r;if(M){o.fillStyle="black",o.strokeStyle="black";const B=t.dropShadow,Re=B.color,Ue=B.alpha;o.shadowColor=a.Color.shared.setValue(Re).setAlpha(Ue).toRgbaString();const ke=B.blur*r,K=B.distance*r;o.shadowBlur=ke,o.shadowOffsetX=Math.cos(B.angle)*K,o.shadowOffsetY=Math.sin(B.angle)*K+z}else o.globalAlpha=((v=t._fill)==null?void 0:v.alpha)??1,o.fillStyle=t._fill?G(t._fill,o):null,(w=t._stroke)!=null&&w.width&&(o.strokeStyle=G(t._stroke,o)),o.shadowColor="black";let Y=(d-p.fontSize)/2;d-p.fontSize<0&&(Y=0);const X=((P=t._stroke)==null?void 0:P.width)??0;for(let B=0;B<h.length;B++)_=X/2,b=X/2+B*d+p.ascent+Y,t.align==="right"?_+=x-u[B]:t.align==="center"&&(_+=(x-u[B])/2),(S=t._stroke)!=null&&S.width&&this._drawLetterSpacing(h[B],t,i,_+t.padding,b+t.padding-R,!0),t._fill!==void 0&&this._drawLetterSpacing(h[B],t,i,_+t.padding,b+t.padding-R)}}_drawLetterSpacing(e,t,r,i,s,o=!1){const{context:l}=r,c=t.letterSpacing;let h=!1;if(a.CanvasTextMetrics.experimentalLetterSpacingSupported&&(a.CanvasTextMetrics.experimentalLetterSpacing?(l.letterSpacing=`${c}px`,l.textLetterSpacing=`${c}px`,h=!0):(l.letterSpacing="0px",l.textLetterSpacing="0px")),c===0||h){o?l.strokeText(e,i,s):l.fillText(e,i,s);return}let d=i;const u=a.CanvasTextMetrics.graphemeSegmenter(e);let x=l.measureText(e).width,p=0;for(let f=0;f<u.length;++f){const g=u[f];o?l.strokeText(g,d,s):l.fillText(g,d,s);let _="";for(let b=f+1;b<u.length;++b)_+=u[b];p=l.measureText(_).width,d+=x-p+c,x=p}}destroy(){this._activeTextures=null}}Fe.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem,a.ExtensionType.CanvasSystem],name:"canvasText"};a.extensions.add(ie);a.extensions.add(se);a.extensions.add(me);a.extensions.add(a.GraphicsContextSystem);a.extensions.add(Te);a.extensions.add(Fe);a.extensions.add(Me);a.extensions.add(Ce);a.extensions.add($);a.extensions.add(Be);a.extensions.add(Se);a.extensions.add(we);a.extensions.add(de);a.extensions.add(ce);
