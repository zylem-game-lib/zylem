import { World } from '@dimforge/rapier3d-compat';
import { Color, LineSegments, Vector3 } from 'three';
import { ZylemWorld } from '../collision/world';
import { ZylemScene } from '../rendering/scene';
import { GameEntityOptions } from '../interfaces/entity';
import { Conditions } from '../interfaces/game';
import { ZylemHUD } from '../ui/hud';
import { EntityParameters, IGameEntity } from './';
import { PerspectiveType } from '../interfaces/perspective';
import { BaseEntity } from './base-entity';
type ZylemStageOptions = {
    perspective: PerspectiveType;
    backgroundColor: Color;
    backgroundImage: String;
    gravity: Vector3;
    conditions: Conditions<any>[];
    children: ({ globals }: any) => IGameEntity[];
};
type StageOptions = GameEntityOptions<ZylemStageOptions, ZylemStage>;
export declare const STAGE_TYPE = 'Stage';
declare const ZylemStage_base: import('ts-mixer/dist/types/types').Class<any[], BaseEntity<unknown>, new (options: import('../interfaces/entity').BaseEntityOptions<unknown>) => BaseEntity<unknown>>;
export declare class ZylemStage extends ZylemStage_base {
	type: string;
	perspective: PerspectiveType;
	backgroundColor: Color;
	backgroundImage: String;
	gravity: Vector3;
	world: ZylemWorld | null;
	scene: ZylemScene | null;
	HUD: ZylemHUD;
	conditions: Conditions<any>[];
	children: Array<IGameEntity>;
	_childrenMap: Map<string, IGameEntity>;
	_removalMap: Map<string, IGameEntity>;
	_debugLines: LineSegments | null;
	ecs: import('bitecs').IWorld;
	testSystem: any;
	constructor(options: StageOptions);
	buildStage(id: string): Promise<void>;
	setup(params: EntityParameters<ZylemStage>): Promise<void>;
	update(params: EntityParameters<ZylemStage>): void;
	destroy(params: EntityParameters<ZylemStage>): void;
	spawnEntity(child: IGameEntity): Promise<void>;
	setForRemoval(entity: IGameEntity): void;
	debugStage(world: World): void;
	getEntityByName(name: string): IGameEntity | null;
	logMissingEntities(): void;
	resize(width: number, height: number): void;
}
export declare function stage(options?: StageOptions): ZylemStage;
export {};
